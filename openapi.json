{
  "openapi": "3.1.0",
  "info": {
    "title": "Smart Orders API",
    "description": "API para gesti√≥n de pedidos con arquitectura limpia",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "Login endpoint to authenticate user and get JWT token",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Current User Info Api V1 Auth Me Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/permissions": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Current User Permissions",
        "description": "Get current user permissions for frontend",
        "operationId": "get_current_user_permissions_api_v1_auth_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Current User Permissions Api V1 Auth Permissions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create a new user (requires admin role)",
        "operationId": "create_user_api_v1_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "description": "Get all users (requires admin role)",
        "operationId": "get_users_api_v1_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Get Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "description": "Get a specific user by ID (admin or own profile)",
        "operationId": "get_user_api_v1_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user (admin can edit all, users can edit their own basic info)",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user (requires admin role)",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/assign-role": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Assign User Role",
        "description": "Assign a role to a user (requires admin role)",
        "operationId": "assign_user_role_api_v1_users__user_id__assign_role_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "new_role",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/roles/available": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Available Roles",
        "description": "Get list of available user roles (requires admin role)",
        "operationId": "get_available_roles_api_v1_users_roles_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Available Roles Api V1 Users Roles Available Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/clients/": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Create Client",
        "description": "Create a new client (requires authentication)",
        "operationId": "create_client_api_v1_clients__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Clients",
        "description": "Get all clients (requires authentication)",
        "operationId": "get_clients_api_v1_clients__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  },
                  "title": "Response Get Clients Api V1 Clients  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/search": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Search Clients",
        "description": "Search clients by name (requires authentication)",
        "operationId": "search_clients_api_v1_clients_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  },
                  "title": "Response Search Clients Api V1 Clients Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client",
        "description": "Get a specific client by ID (requires authentication)",
        "operationId": "get_client_api_v1_clients__client_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client",
        "description": "Update a client (requires authentication)",
        "operationId": "update_client_api_v1_clients__client_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "summary": "Delete Client",
        "description": "Delete a client (soft delete) (requires authentication)",
        "operationId": "delete_client_api_v1_clients__client_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/reactivate": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Reactivate Client",
        "description": "Reactivate a deleted client (requires authentication)",
        "operationId": "reactivate_client_api_v1_clients__client_id__reactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create Product",
        "description": "Create a new product (requires authentication)",
        "operationId": "create_product_api_v1_products__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Products",
        "description": "Get all products (requires authentication)",
        "operationId": "get_products_api_v1_products__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  },
                  "title": "Response Get Products Api V1 Products  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/search": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Search Products",
        "description": "Search products by name (requires authentication)",
        "operationId": "search_products_api_v1_products_search_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  },
                  "title": "Response Search Products Api V1 Products Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/low-stock": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Low Stock Products",
        "description": "Get products with low stock",
        "operationId": "get_low_stock_products_api_v1_products_low_stock_get",
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Threshold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponse"
                  },
                  "title": "Response Get Low Stock Products Api V1 Products Low Stock Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{product_id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Product",
        "description": "Get a specific product by ID (requires authentication)",
        "operationId": "get_product_api_v1_products__product_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update Product",
        "description": "Update a product (requires authentication)",
        "operationId": "update_product_api_v1_products__product_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete Product",
        "description": "Delete a product (soft delete) (requires authentication)",
        "operationId": "delete_product_api_v1_products__product_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/sku/{sku}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Product By Sku",
        "description": "Get a specific product by SKU",
        "operationId": "get_product_by_sku_api_v1_products_sku__sku__get",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{product_id}/reactivate": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Reactivate Product",
        "description": "Reactivate a deleted product (requires authentication)",
        "operationId": "reactivate_product_api_v1_products__product_id__reactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{product_id}/stock": {
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update Stock",
        "description": "Update product stock (requires authentication)",
        "operationId": "update_stock_api_v1_products__product_id__stock_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Product Id"
            }
          },
          {
            "name": "stock_change",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Stock Change"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/routes/": {
      "post": {
        "tags": [
          "routes"
        ],
        "summary": "Create Route",
        "description": "Create a new route (requires authentication)",
        "operationId": "create_route_api_v1_routes__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "routes"
        ],
        "summary": "Get Routes",
        "description": "Get all routes (requires authentication)",
        "operationId": "get_routes_api_v1_routes__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter only active routes",
              "default": false,
              "title": "Active Only"
            },
            "description": "Filter only active routes"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Search routes by name",
              "title": "Search"
            },
            "description": "Search routes by name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RouteResponse"
                  },
                  "title": "Response Get Routes Api V1 Routes  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/routes/{route_id}": {
      "get": {
        "tags": [
          "routes"
        ],
        "summary": "Get Route",
        "description": "Get a specific route by ID (requires authentication)",
        "operationId": "get_route_api_v1_routes__route_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Route Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "routes"
        ],
        "summary": "Update Route",
        "description": "Update a route (requires authentication)",
        "operationId": "update_route_api_v1_routes__route_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Route Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "routes"
        ],
        "summary": "Delete Route",
        "description": "Delete (deactivate) a route (requires authentication)",
        "operationId": "delete_route_api_v1_routes__route_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Route Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/routes/{route_id}/reactivate": {
      "post": {
        "tags": [
          "routes"
        ],
        "summary": "Reactivate Route",
        "description": "Reactivate a route (requires authentication)",
        "operationId": "reactivate_route_api_v1_routes__route_id__reactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "route_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Route Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create Order",
        "description": "Create a new order (requires sales+ role)",
        "operationId": "create_order_api_v1_orders__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Orders",
        "description": "Get all orders (requires view orders permission)",
        "operationId": "get_orders_api_v1_orders__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Status Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  },
                  "title": "Response Get Orders Api V1 Orders  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Order",
        "description": "Get a specific order by ID (requires authentication)",
        "operationId": "get_order_api_v1_orders__order_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "orders"
        ],
        "summary": "Update Order",
        "description": "Update an order (requires authentication)",
        "operationId": "update_order_api_v1_orders__order_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Delete Order",
        "description": "Delete an order (requires authentication)",
        "operationId": "delete_order_api_v1_orders__order_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/items": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Add Order Item",
        "description": "Add an item to an order (requires authentication)",
        "operationId": "add_order_item_api_v1_orders__order_id__items_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderItemCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/items/{item_id}": {
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Remove Order Item",
        "description": "Remove an item from an order (requires authentication)",
        "operationId": "remove_order_item_api_v1_orders__order_id__items__item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/status/{new_status}": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Update Order Status",
        "description": "Update order status (requires appropriate permissions)",
        "operationId": "update_order_status_api_v1_orders__order_id__status__new_status__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          },
          {
            "name": "new_status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/client/{client_id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Orders By Client",
        "description": "Get orders by client ID (requires authentication)",
        "operationId": "get_orders_by_client_api_v1_orders_client__client_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  },
                  "title": "Response Get Orders By Client Api V1 Orders Client  Client Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/receipt": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Download Order Receipt",
        "description": "Download order receipt/voucher PDF (requires authentication)",
        "operationId": "download_order_receipt_api_v1_orders__order_id__receipt_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/receipt/preview": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Preview Order Receipt",
        "description": "Preview order receipt PDF in browser (requires authentication)",
        "operationId": "preview_order_receipt_api_v1_orders__order_id__receipt_preview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{order_id}/receipt/generate": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Generate Order Receipt File",
        "description": "Generate and save order receipt PDF file (requires authentication)",
        "operationId": "generate_order_receipt_file_api_v1_orders__order_id__receipt_generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Create Invoice",
        "description": "Create a new invoice from an order (requires authentication)",
        "operationId": "create_invoice_api_v1_invoices__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoices",
        "description": "Get all invoices with optional filters (requires authentication)",
        "operationId": "get_invoices_api_v1_invoices__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by invoice status",
              "title": "Status Filter"
            },
            "description": "Filter by invoice status"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by client ID",
              "title": "Client Id"
            },
            "description": "Filter by client ID"
          },
          {
            "name": "overdue_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only overdue invoices",
              "default": false,
              "title": "Overdue Only"
            },
            "description": "Show only overdue invoices"
          },
          {
            "name": "pending_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only pending invoices",
              "default": false,
              "title": "Pending Only"
            },
            "description": "Show only pending invoices"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceListResponse"
                  },
                  "title": "Response Get Invoices Api V1 Invoices  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/summary": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice Summary",
        "description": "Get invoice summary/statistics (requires authentication)",
        "operationId": "get_invoice_summary_api_v1_invoices_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for summary",
              "title": "Start Date"
            },
            "description": "Start date for summary"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for summary",
              "title": "End Date"
            },
            "description": "End date for summary"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice",
        "description": "Get a specific invoice by ID (requires authentication)",
        "operationId": "get_invoice_api_v1_invoices__invoice_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Invoice",
        "description": "Update an invoice (requires authentication)",
        "operationId": "update_invoice_api_v1_invoices__invoice_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/number/{invoice_number}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice By Number",
        "description": "Get invoice by invoice number (requires authentication)",
        "operationId": "get_invoice_by_number_api_v1_invoices_number__invoice_number__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invoice Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/order/{order_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Get Invoice By Order",
        "description": "Get invoice for a specific order (requires authentication)",
        "operationId": "get_invoice_by_order_api_v1_invoices_order__order_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}/status/{new_status}": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Update Invoice Status",
        "description": "Update invoice status (requires authentication)",
        "operationId": "update_invoice_status_api_v1_invoices__invoice_id__status__new_status__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "new_status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}/cancel": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Cancel Invoice",
        "description": "Cancel an invoice (requires authentication)",
        "operationId": "cancel_invoice_api_v1_invoices__invoice_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/payments": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Record Payment",
        "description": "Record a payment against an invoice (requires authentication)",
        "operationId": "record_payment_api_v1_invoices_payments_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{invoice_id}/pdf": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Download Invoice Pdf",
        "description": "Download invoice PDF (requires authentication)",
        "operationId": "download_invoice_pdf_api_v1_invoices__invoice_id__pdf_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "regenerate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force regenerate PDF",
              "default": false,
              "title": "Regenerate"
            },
            "description": "Force regenerate PDF"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}/pdf/generate": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Generate Invoice Pdf",
        "description": "Generate and save invoice PDF (requires authentication)",
        "operationId": "generate_invoice_pdf_api_v1_invoices__invoice_id__pdf_generate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          },
          {
            "name": "regenerate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force regenerate PDF",
              "default": false,
              "title": "Regenerate"
            },
            "description": "Force regenerate PDF"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/orders/{order_id}/auto-invoice": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Auto Create Invoice",
        "description": "Auto-create invoice for delivered order (requires authentication)",
        "operationId": "auto_create_invoice_api_v1_invoices_orders__order_id__auto_invoice_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Order Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/maintenance/mark-overdue": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Mark Overdue Invoices",
        "description": "Mark overdue invoices (maintenance endpoint) (requires authentication)",
        "operationId": "mark_overdue_invoices_api_v1_invoices_maintenance_mark_overdue_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/invoices/{invoice_id}/pdf/preview": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Preview Invoice Pdf",
        "description": "Preview invoice PDF in browser (requires authentication)",
        "operationId": "preview_invoice_pdf_api_v1_invoices__invoice_id__pdf_preview_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Inventory Entry",
        "description": "Create a new inventory entry (requires authentication)",
        "operationId": "create_inventory_entry_api_v1_inventory_entries_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryEntryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Entries",
        "description": "Get inventory entries with optional filters (requires authentication)",
        "operationId": "get_inventory_entries_api_v1_inventory_entries_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "entry_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by entry type",
              "title": "Entry Type"
            },
            "description": "Filter by entry type"
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status Filter"
            },
            "description": "Filter by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by user ID",
              "title": "User Id"
            },
            "description": "Filter by user ID"
          },
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by product ID",
              "title": "Product Id"
            },
            "description": "Filter by product ID"
          },
          {
            "name": "pending_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only pending entries",
              "default": false,
              "title": "Pending Only"
            },
            "description": "Show only pending entries"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryEntryListResponse"
                  },
                  "title": "Response Get Inventory Entries Api V1 Inventory Entries Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/summary": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Summary",
        "description": "Get inventory entries summary/statistics (requires authentication)",
        "operationId": "get_inventory_summary_api_v1_inventory_entries_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for summary",
              "title": "Start Date"
            },
            "description": "Start date for summary"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for summary",
              "title": "End Date"
            },
            "description": "End date for summary"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntrySummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/{entry_id}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Entry",
        "description": "Get a specific inventory entry by ID (requires authentication)",
        "operationId": "get_inventory_entry_api_v1_inventory_entries__entry_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "inventory"
        ],
        "summary": "Update Inventory Entry",
        "description": "Update an inventory entry (requires authentication)",
        "operationId": "update_inventory_entry_api_v1_inventory_entries__entry_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryEntryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/number/{entry_number}": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Entry By Number",
        "description": "Get inventory entry by entry number (requires authentication)",
        "operationId": "get_inventory_entry_by_number_api_v1_inventory_entries_number__entry_number__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entry Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/{entry_id}/approve": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Approve Inventory Entry",
        "description": "Approve an inventory entry (requires supervisor+ role)",
        "operationId": "approve_inventory_entry_api_v1_inventory_entries__entry_id__approve_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/{entry_id}/complete": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Complete Inventory Entry",
        "description": "Complete an inventory entry and update stock (requires supervisor+ role)",
        "operationId": "complete_inventory_entry_api_v1_inventory_entries__entry_id__complete_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/{entry_id}/cancel": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Cancel Inventory Entry",
        "description": "Cancel an inventory entry (requires authentication)",
        "operationId": "cancel_inventory_entry_api_v1_inventory_entries__entry_id__cancel_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/entries/batch-update": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Batch Update Entries",
        "description": "Update status for multiple entries (requires authentication)",
        "operationId": "batch_update_entries_api_v1_inventory_entries_batch_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/entries/{entry_id}/validate": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Validate Inventory Entry",
        "description": "Validate an inventory entry before approval/completion (requires authentication)",
        "operationId": "validate_inventory_entry_api_v1_inventory_entries__entry_id__validate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Entry Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntryValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/stock/adjust": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Stock Adjustment",
        "description": "Create a quick stock adjustment (requires authentication)",
        "operationId": "create_stock_adjustment_api_v1_inventory_stock_adjust_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/reports/movements": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Inventory Movement Report",
        "description": "Get inventory movement report (requires authentication)",
        "operationId": "get_inventory_movement_report_api_v1_inventory_reports_movements_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific product",
              "title": "Product Id"
            },
            "description": "Filter by specific product"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryReport"
                  },
                  "title": "Response Get Inventory Movement Report Api V1 Inventory Reports Movements Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/workflows/production": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Production Entry",
        "description": "Create a production entry (specialized workflow) (requires authentication)",
        "operationId": "create_production_entry_api_v1_inventory_workflows_production_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "auto_complete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Auto-complete entry after creation",
              "default": false,
              "title": "Auto Complete"
            },
            "description": "Auto-complete entry after creation"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryEntryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/workflows/purchase": {
      "post": {
        "tags": [
          "inventory"
        ],
        "summary": "Create Purchase Entry",
        "description": "Create a purchase entry (specialized workflow) (requires authentication)",
        "operationId": "create_purchase_entry_api_v1_inventory_workflows_purchase_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "auto_approve",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Auto-approve entry after creation",
              "default": false,
              "title": "Auto Approve"
            },
            "description": "Auto-approve entry after creation"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryEntryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryEntryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/inventory/types": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Entry Types",
        "description": "Get available entry types (requires authentication)",
        "operationId": "get_entry_types_api_v1_inventory_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/inventory/statuses": {
      "get": {
        "tags": [
          "inventory"
        ],
        "summary": "Get Entry Statuses",
        "description": "Get available entry statuses (requires authentication)",
        "operationId": "get_entry_statuses_api_v1_inventory_statuses_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchUpdateRequest": {
        "properties": {
          "entry_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 1,
            "title": "Entry Ids"
          },
          "status": {
            "$ref": "#/components/schemas/EntryStatus"
          }
        },
        "type": "object",
        "required": [
          "entry_ids",
          "status"
        ],
        "title": "BatchUpdateRequest",
        "description": "For batch operations"
      },
      "ClientCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "nit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nit"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ClientCreate"
      },
      "ClientResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "nit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nit"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at"
        ],
        "title": "ClientResponse"
      },
      "ClientUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "nit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nit"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ClientUpdate"
      },
      "EntryStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending",
          "approved",
          "completed",
          "cancelled"
        ],
        "title": "EntryStatus"
      },
      "EntryType": {
        "type": "string",
        "enum": [
          "production",
          "purchase",
          "return",
          "adjustment",
          "transfer",
          "initial"
        ],
        "title": "EntryType"
      },
      "EntryValidationRequest": {
        "properties": {
          "entry_id": {
            "type": "integer",
            "title": "Entry Id"
          },
          "validate_stock": {
            "type": "boolean",
            "title": "Validate Stock",
            "default": true
          },
          "validate_costs": {
            "type": "boolean",
            "title": "Validate Costs",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "entry_id"
        ],
        "title": "EntryValidationRequest",
        "description": "For validating entries before approval"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InventoryEntryCreate": {
        "properties": {
          "entry_type": {
            "$ref": "#/components/schemas/EntryType"
          },
          "supplier_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Info"
          },
          "expected_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "reference_document": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Document"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InventoryEntryItemCreate"
            },
            "type": "array",
            "minItems": 1,
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "entry_type",
          "items"
        ],
        "title": "InventoryEntryCreate"
      },
      "InventoryEntryItemCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Quantity",
            "description": "Quantity must be greater than 0"
          },
          "unit_cost": {
            "type": "number",
            "minimum": 0,
            "title": "Unit Cost",
            "description": "Unit cost must be non-negative",
            "default": 0
          },
          "batch_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Batch Number"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity"
        ],
        "title": "InventoryEntryItemCreate"
      },
      "InventoryEntryItemResponse": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "title": "Quantity",
            "description": "Quantity must be greater than 0"
          },
          "unit_cost": {
            "type": "number",
            "minimum": 0,
            "title": "Unit Cost",
            "description": "Unit cost must be non-negative",
            "default": 0
          },
          "batch_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Batch Number"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "entry_id": {
            "type": "integer",
            "title": "Entry Id"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "product_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Name"
          },
          "product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sku"
          },
          "product_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Description"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "id",
          "entry_id",
          "total_cost"
        ],
        "title": "InventoryEntryItemResponse"
      },
      "InventoryEntryListResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "entry_number": {
            "type": "string",
            "title": "Entry Number"
          },
          "entry_type": {
            "$ref": "#/components/schemas/EntryType"
          },
          "status": {
            "$ref": "#/components/schemas/EntryStatus"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "entry_date": {
            "type": "string",
            "format": "date-time",
            "title": "Entry Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          },
          "items_count": {
            "type": "integer",
            "title": "Items Count",
            "default": 0
          },
          "supplier_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Info"
          }
        },
        "type": "object",
        "required": [
          "id",
          "entry_number",
          "entry_type",
          "status",
          "total_cost",
          "entry_date"
        ],
        "title": "InventoryEntryListResponse"
      },
      "InventoryEntryResponse": {
        "properties": {
          "entry_type": {
            "$ref": "#/components/schemas/EntryType"
          },
          "supplier_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Info"
          },
          "expected_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "reference_document": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Document"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "entry_number": {
            "type": "string",
            "title": "Entry Number"
          },
          "status": {
            "$ref": "#/components/schemas/EntryStatus"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "entry_date": {
            "type": "string",
            "format": "date-time",
            "title": "Entry Date"
          },
          "completed_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/InventoryEntryItemResponse"
            },
            "type": "array",
            "title": "Items",
            "default": []
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          }
        },
        "type": "object",
        "required": [
          "entry_type",
          "id",
          "entry_number",
          "status",
          "user_id",
          "total_cost",
          "entry_date",
          "created_at"
        ],
        "title": "InventoryEntryResponse"
      },
      "InventoryEntrySummary": {
        "properties": {
          "total_entries": {
            "type": "integer",
            "title": "Total Entries"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "entries_by_type": {
            "type": "object",
            "title": "Entries By Type"
          },
          "entries_by_status": {
            "type": "object",
            "title": "Entries By Status"
          },
          "pending_entries": {
            "type": "integer",
            "title": "Pending Entries"
          },
          "completed_today": {
            "type": "integer",
            "title": "Completed Today"
          }
        },
        "type": "object",
        "required": [
          "total_entries",
          "total_cost",
          "entries_by_type",
          "entries_by_status",
          "pending_entries",
          "completed_today"
        ],
        "title": "InventoryEntrySummary",
        "description": "Summary for dashboard/reports"
      },
      "InventoryEntryUpdate": {
        "properties": {
          "entry_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EntryType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EntryStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "supplier_info": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Supplier Info"
          },
          "expected_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "reference_document": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Document"
          }
        },
        "type": "object",
        "title": "InventoryEntryUpdate"
      },
      "InventoryReport": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "product_name": {
            "type": "string",
            "title": "Product Name"
          },
          "product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sku"
          },
          "current_stock": {
            "type": "integer",
            "title": "Current Stock"
          },
          "total_entries": {
            "type": "integer",
            "title": "Total Entries"
          },
          "total_quantity_added": {
            "type": "integer",
            "title": "Total Quantity Added"
          },
          "last_entry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Entry Date"
          },
          "average_cost": {
            "type": "number",
            "title": "Average Cost"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "product_name",
          "current_stock",
          "total_entries",
          "total_quantity_added",
          "average_cost"
        ],
        "title": "InventoryReport",
        "description": "Inventory movement report"
      },
      "InvoiceCreate": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_rate": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Tax Rate",
            "description": "Tax rate (0.12 = 12%)",
            "default": 0.12
          },
          "discount_amount": {
            "type": "number",
            "minimum": 0,
            "title": "Discount Amount",
            "description": "Discount amount",
            "default": 0
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "payment_terms": {
            "type": "string",
            "maxLength": 255,
            "title": "Payment Terms",
            "default": "Pago contra entrega"
          }
        },
        "type": "object",
        "required": [
          "order_id"
        ],
        "title": "InvoiceCreate"
      },
      "InvoiceListResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          },
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "balance_due": {
            "type": "number",
            "title": "Balance Due"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "title": "Issue Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "client_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "invoice_number",
          "order_id",
          "status",
          "total_amount",
          "balance_due",
          "issue_date"
        ],
        "title": "InvoiceListResponse"
      },
      "InvoiceResponse": {
        "properties": {
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "tax_rate": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Tax Rate",
            "description": "Tax rate (0.12 = 12%)",
            "default": 0.12
          },
          "discount_amount": {
            "type": "number",
            "minimum": 0,
            "title": "Discount Amount",
            "description": "Discount amount",
            "default": 0
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "payment_terms": {
            "type": "string",
            "maxLength": 255,
            "title": "Payment Terms",
            "default": "Pago contra entrega"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "invoice_number": {
            "type": "string",
            "title": "Invoice Number"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "subtotal": {
            "type": "number",
            "title": "Subtotal"
          },
          "tax_amount": {
            "type": "number",
            "title": "Tax Amount"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "paid_amount": {
            "type": "number",
            "title": "Paid Amount"
          },
          "balance_due": {
            "type": "number",
            "title": "Balance Due"
          },
          "issue_date": {
            "type": "string",
            "format": "date-time",
            "title": "Issue Date"
          },
          "paid_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid Date"
          },
          "pdf_generated": {
            "type": "boolean",
            "title": "Pdf Generated"
          },
          "pdf_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Path"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "order_id",
          "id",
          "invoice_number",
          "status",
          "subtotal",
          "tax_amount",
          "total_amount",
          "paid_amount",
          "balance_due",
          "issue_date",
          "pdf_generated",
          "created_at"
        ],
        "title": "InvoiceResponse"
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "draft",
          "issued",
          "paid",
          "overdue",
          "cancelled"
        ],
        "title": "InvoiceStatus"
      },
      "InvoiceSummary": {
        "properties": {
          "total_invoices": {
            "type": "integer",
            "title": "Total Invoices"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "paid_amount": {
            "type": "number",
            "title": "Paid Amount"
          },
          "pending_amount": {
            "type": "number",
            "title": "Pending Amount"
          },
          "overdue_count": {
            "type": "integer",
            "title": "Overdue Count"
          },
          "overdue_amount": {
            "type": "number",
            "title": "Overdue Amount"
          }
        },
        "type": "object",
        "required": [
          "total_invoices",
          "total_amount",
          "paid_amount",
          "pending_amount",
          "overdue_count",
          "overdue_amount"
        ],
        "title": "InvoiceSummary",
        "description": "Summary for dashboard/reports"
      },
      "InvoiceUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              },
              {
                "type": "null"
              }
            ]
          },
          "discount_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Amount"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "payment_terms": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Terms"
          },
          "paid_amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid Amount"
          },
          "paid_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid Date"
          }
        },
        "type": "object",
        "title": "InvoiceUpdate"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "OrderCreate": {
        "properties": {
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "route_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ],
            "default": "pending"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/OrderItemCreate"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "items"
        ],
        "title": "OrderCreate"
      },
      "OrderItemCreate": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "unit_price"
        ],
        "title": "OrderItemCreate"
      },
      "OrderItemResponse": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          },
          "unit_price": {
            "type": "number",
            "title": "Unit Price"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_id": {
            "type": "integer",
            "title": "Order Id"
          },
          "total_price": {
            "type": "number",
            "title": "Total Price"
          },
          "product_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Name"
          },
          "product_sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Sku"
          },
          "product_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product Description"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "unit_price",
          "id",
          "order_id",
          "total_price"
        ],
        "title": "OrderItemResponse"
      },
      "OrderResponse": {
        "properties": {
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "route_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Id"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              }
            ],
            "default": "pending"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "order_number": {
            "type": "string",
            "title": "Order Number"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/OrderItemResponse"
            },
            "type": "array",
            "title": "Items",
            "default": []
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClientResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "route": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RouteResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "id",
          "order_number",
          "total_amount",
          "created_at"
        ],
        "title": "OrderResponse"
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "in_progress",
          "shipped",
          "delivered",
          "cancelled"
        ],
        "title": "OrderStatus"
      },
      "OrderUpdate": {
        "properties": {
          "route_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Route Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "OrderUpdate"
      },
      "PaymentCreate": {
        "properties": {
          "invoice_id": {
            "type": "integer",
            "title": "Invoice Id"
          },
          "amount": {
            "type": "number",
            "exclusiveMinimum": 0,
            "title": "Amount",
            "description": "Payment amount must be positive"
          },
          "payment_method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "payment_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "invoice_id",
          "amount",
          "payment_method"
        ],
        "title": "PaymentCreate",
        "description": "For recording payments against invoices"
      },
      "PaymentMethod": {
        "type": "string",
        "enum": [
          "cash",
          "credit_card",
          "bank_transfer",
          "check",
          "other"
        ],
        "title": "PaymentMethod"
      },
      "ProductCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "stock": {
            "type": "integer",
            "title": "Stock",
            "default": 0
          },
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "price",
          "sku"
        ],
        "title": "ProductCreate"
      },
      "ProductResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "type": "number",
            "title": "Price"
          },
          "stock": {
            "type": "integer",
            "title": "Stock",
            "default": 0
          },
          "sku": {
            "type": "string",
            "title": "Sku"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "price",
          "sku",
          "id",
          "created_at"
        ],
        "title": "ProductResponse"
      },
      "ProductUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "stock": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stock"
          },
          "sku": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sku"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "ProductUpdate"
      },
      "RouteCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RouteCreate"
      },
      "RouteResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "is_active",
          "created_at"
        ],
        "title": "RouteResponse"
      },
      "RouteUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "RouteUpdate"
      },
      "StockAdjustmentRequest": {
        "properties": {
          "product_id": {
            "type": "integer",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "Positive for increase, negative for decrease"
          },
          "reason": {
            "type": "string",
            "maxLength": 255,
            "title": "Reason"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "reason"
        ],
        "title": "StockAdjustmentRequest",
        "description": "For quick stock adjustments"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ],
            "default": "EMPLOYEE"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "full_name",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ],
            "default": "EMPLOYEE"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "email",
          "username",
          "full_name",
          "id",
          "created_at"
        ],
        "title": "UserResponse"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "EMPLOYEE",
          "SALES",
          "DRIVER",
          "SUPERVISOR",
          "MANAGER",
          "ADMIN"
        ],
        "title": "UserRole"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}