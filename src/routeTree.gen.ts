/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ClerkRouteRouteImport } from './routes/clerk/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as ClerkAuthenticatedRouteRouteImport } from './routes/clerk/_authenticated/route'
import { Route as ClerkauthRouteRouteImport } from './routes/clerk/(auth)/route'
import { Route as AuthenticatedUsersRouteRouteImport } from './routes/_authenticated/users/route'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedRoutesRouteRouteImport } from './routes/_authenticated/routes/route'
import { Route as AuthenticatedProductsRouteRouteImport } from './routes/_authenticated/products/route'
import { Route as AuthenticatedOrdersRouteRouteImport } from './routes/_authenticated/orders/route'
import { Route as AuthenticatedNewOrderRouteRouteImport } from './routes/_authenticated/new-order/route'
import { Route as AuthenticatedInventoryRouteRouteImport } from './routes/_authenticated/inventory/route'
import { Route as AuthenticatedFelRouteRouteImport } from './routes/_authenticated/fel/route'
import { Route as AuthenticatedCompaniesRouteRouteImport } from './routes/_authenticated/companies/route'
import { Route as AuthenticatedClientsRouteRouteImport } from './routes/_authenticated/clients/route'
import { Route as AuthenticatedUsersIndexRouteImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTasksIndexRouteImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedRoutesIndexRouteImport } from './routes/_authenticated/routes/index'
import { Route as AuthenticatedInventoryIndexRouteImport } from './routes/_authenticated/inventory/index'
import { Route as AuthenticatedHelpCenterIndexRouteImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedFelIndexRouteImport } from './routes/_authenticated/fel/index'
import { Route as AuthenticatedCompaniesIndexRouteImport } from './routes/_authenticated/companies/index'
import { Route as AuthenticatedChatsIndexRouteImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexRouteImport } from './routes/_authenticated/apps/index'
import { Route as ClerkAuthenticatedUserManagementRouteImport } from './routes/clerk/_authenticated/user-management'
import { Route as ClerkauthSignUpRouteImport } from './routes/clerk/(auth)/sign-up'
import { Route as ClerkauthSignInRouteImport } from './routes/clerk/(auth)/sign-in'
import { Route as AuthenticatedFelInvoicesRouteImport } from './routes/_authenticated/fel/invoices'
import { Route as AuthenticatedFelGenerateRouteImport } from './routes/_authenticated/fel/generate'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedOrderDetailOrderIdRouteRouteImport } from './routes/_authenticated/order-detail/$orderId/route'
import { Route as AuthenticatedInventoryNewEntryRouteRouteImport } from './routes/_authenticated/inventory/new-entry/route'
import { Route as AuthenticatedInventoryDetailEntryIdRouteRouteImport } from './routes/_authenticated/inventory-detail/$entryId/route'
import { Route as AuthenticatedEditOrderOrderIdRouteRouteImport } from './routes/_authenticated/edit-order/$orderId/route'
import { Route as AuthenticatedClientsNewClientRouteRouteImport } from './routes/_authenticated/clients/new-client/route'
import { Route as AuthenticatedClientsEditClientClientIdRouteRouteImport } from './routes/_authenticated/clients/edit-client/$clientId/route'

const ClerkRouteRoute = ClerkRouteRouteImport.update({
  id: '/clerk',
  path: '/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ClerkAuthenticatedRouteRoute = ClerkAuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const ClerkauthRouteRoute = ClerkauthRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const AuthenticatedUsersRouteRoute = AuthenticatedUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedRoutesRouteRoute =
  AuthenticatedRoutesRouteRouteImport.update({
    id: '/routes',
    path: '/routes',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProductsRouteRoute =
  AuthenticatedProductsRouteRouteImport.update({
    id: '/products',
    path: '/products',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrdersRouteRoute =
  AuthenticatedOrdersRouteRouteImport.update({
    id: '/orders',
    path: '/orders',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedNewOrderRouteRoute =
  AuthenticatedNewOrderRouteRouteImport.update({
    id: '/new-order',
    path: '/new-order',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInventoryRouteRoute =
  AuthenticatedInventoryRouteRouteImport.update({
    id: '/inventory',
    path: '/inventory',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedFelRouteRoute = AuthenticatedFelRouteRouteImport.update({
  id: '/fel',
  path: '/fel',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedCompaniesRouteRoute =
  AuthenticatedCompaniesRouteRouteImport.update({
    id: '/companies',
    path: '/companies',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedClientsRouteRoute =
  AuthenticatedClientsRouteRouteImport.update({
    id: '/clients',
    path: '/clients',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedUsersRouteRoute,
} as any)
const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedRoutesIndexRoute =
  AuthenticatedRoutesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedRoutesRouteRoute,
  } as any)
const AuthenticatedInventoryIndexRoute =
  AuthenticatedInventoryIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedInventoryRouteRoute,
  } as any)
const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedFelIndexRoute = AuthenticatedFelIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedFelRouteRoute,
} as any)
const AuthenticatedCompaniesIndexRoute =
  AuthenticatedCompaniesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedCompaniesRouteRoute,
  } as any)
const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const ClerkAuthenticatedUserManagementRoute =
  ClerkAuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => ClerkAuthenticatedRouteRoute,
  } as any)
const ClerkauthSignUpRoute = ClerkauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ClerkauthSignInRoute = ClerkauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const AuthenticatedFelInvoicesRoute =
  AuthenticatedFelInvoicesRouteImport.update({
    id: '/invoices',
    path: '/invoices',
    getParentRoute: () => AuthenticatedFelRouteRoute,
  } as any)
const AuthenticatedFelGenerateRoute =
  AuthenticatedFelGenerateRouteImport.update({
    id: '/generate',
    path: '/generate',
    getParentRoute: () => AuthenticatedFelRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedOrderDetailOrderIdRouteRoute =
  AuthenticatedOrderDetailOrderIdRouteRouteImport.update({
    id: '/order-detail/$orderId',
    path: '/order-detail/$orderId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedInventoryNewEntryRouteRoute =
  AuthenticatedInventoryNewEntryRouteRouteImport.update({
    id: '/new-entry',
    path: '/new-entry',
    getParentRoute: () => AuthenticatedInventoryRouteRoute,
  } as any)
const AuthenticatedInventoryDetailEntryIdRouteRoute =
  AuthenticatedInventoryDetailEntryIdRouteRouteImport.update({
    id: '/inventory-detail/$entryId',
    path: '/inventory-detail/$entryId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedEditOrderOrderIdRouteRoute =
  AuthenticatedEditOrderOrderIdRouteRouteImport.update({
    id: '/edit-order/$orderId',
    path: '/edit-order/$orderId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedClientsNewClientRouteRoute =
  AuthenticatedClientsNewClientRouteRouteImport.update({
    id: '/new-client',
    path: '/new-client',
    getParentRoute: () => AuthenticatedClientsRouteRoute,
  } as any)
const AuthenticatedClientsEditClientClientIdRouteRoute =
  AuthenticatedClientsEditClientClientIdRouteRouteImport.update({
    id: '/edit-client/$clientId',
    path: '/edit-client/$clientId',
    getParentRoute: () => AuthenticatedClientsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/clients': typeof AuthenticatedClientsRouteRouteWithChildren
  '/companies': typeof AuthenticatedCompaniesRouteRouteWithChildren
  '/fel': typeof AuthenticatedFelRouteRouteWithChildren
  '/inventory': typeof AuthenticatedInventoryRouteRouteWithChildren
  '/new-order': typeof AuthenticatedNewOrderRouteRoute
  '/orders': typeof AuthenticatedOrdersRouteRoute
  '/products': typeof AuthenticatedProductsRouteRoute
  '/routes': typeof AuthenticatedRoutesRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRoute
  '/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/clerk/': typeof ClerkauthRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/clients/new-client': typeof AuthenticatedClientsNewClientRouteRoute
  '/edit-order/$orderId': typeof AuthenticatedEditOrderOrderIdRouteRoute
  '/inventory-detail/$entryId': typeof AuthenticatedInventoryDetailEntryIdRouteRoute
  '/inventory/new-entry': typeof AuthenticatedInventoryNewEntryRouteRoute
  '/order-detail/$orderId': typeof AuthenticatedOrderDetailOrderIdRouteRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/fel/generate': typeof AuthenticatedFelGenerateRoute
  '/fel/invoices': typeof AuthenticatedFelInvoicesRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/companies/': typeof AuthenticatedCompaniesIndexRoute
  '/fel/': typeof AuthenticatedFelIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/inventory/': typeof AuthenticatedInventoryIndexRoute
  '/routes/': typeof AuthenticatedRoutesIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users/': typeof AuthenticatedUsersIndexRoute
  '/clients/edit-client/$clientId': typeof AuthenticatedClientsEditClientClientIdRouteRoute
}
export interface FileRoutesByTo {
  '/clients': typeof AuthenticatedClientsRouteRouteWithChildren
  '/new-order': typeof AuthenticatedNewOrderRouteRoute
  '/orders': typeof AuthenticatedOrdersRouteRoute
  '/products': typeof AuthenticatedProductsRouteRoute
  '/settings': typeof AuthenticatedSettingsRouteRoute
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/clients/new-client': typeof AuthenticatedClientsNewClientRouteRoute
  '/edit-order/$orderId': typeof AuthenticatedEditOrderOrderIdRouteRoute
  '/inventory-detail/$entryId': typeof AuthenticatedInventoryDetailEntryIdRouteRoute
  '/inventory/new-entry': typeof AuthenticatedInventoryNewEntryRouteRoute
  '/order-detail/$orderId': typeof AuthenticatedOrderDetailOrderIdRouteRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/fel/generate': typeof AuthenticatedFelGenerateRoute
  '/fel/invoices': typeof AuthenticatedFelInvoicesRoute
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/companies': typeof AuthenticatedCompaniesIndexRoute
  '/fel': typeof AuthenticatedFelIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/inventory': typeof AuthenticatedInventoryIndexRoute
  '/routes': typeof AuthenticatedRoutesIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
  '/clients/edit-client/$clientId': typeof AuthenticatedClientsEditClientClientIdRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/clerk': typeof ClerkRouteRouteWithChildren
  '/_authenticated/clients': typeof AuthenticatedClientsRouteRouteWithChildren
  '/_authenticated/companies': typeof AuthenticatedCompaniesRouteRouteWithChildren
  '/_authenticated/fel': typeof AuthenticatedFelRouteRouteWithChildren
  '/_authenticated/inventory': typeof AuthenticatedInventoryRouteRouteWithChildren
  '/_authenticated/new-order': typeof AuthenticatedNewOrderRouteRoute
  '/_authenticated/orders': typeof AuthenticatedOrdersRouteRoute
  '/_authenticated/products': typeof AuthenticatedProductsRouteRoute
  '/_authenticated/routes': typeof AuthenticatedRoutesRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRoute
  '/_authenticated/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/clerk/(auth)': typeof ClerkauthRouteRouteWithChildren
  '/clerk/_authenticated': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/clients/new-client': typeof AuthenticatedClientsNewClientRouteRoute
  '/_authenticated/edit-order/$orderId': typeof AuthenticatedEditOrderOrderIdRouteRoute
  '/_authenticated/inventory-detail/$entryId': typeof AuthenticatedInventoryDetailEntryIdRouteRoute
  '/_authenticated/inventory/new-entry': typeof AuthenticatedInventoryNewEntryRouteRoute
  '/_authenticated/order-detail/$orderId': typeof AuthenticatedOrderDetailOrderIdRouteRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/fel/generate': typeof AuthenticatedFelGenerateRoute
  '/_authenticated/fel/invoices': typeof AuthenticatedFelInvoicesRoute
  '/clerk/(auth)/sign-in': typeof ClerkauthSignInRoute
  '/clerk/(auth)/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/_authenticated/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/companies/': typeof AuthenticatedCompaniesIndexRoute
  '/_authenticated/fel/': typeof AuthenticatedFelIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/inventory/': typeof AuthenticatedInventoryIndexRoute
  '/_authenticated/routes/': typeof AuthenticatedRoutesIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
  '/_authenticated/clients/edit-client/$clientId': typeof AuthenticatedClientsEditClientClientIdRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/clerk'
    | '/clients'
    | '/companies'
    | '/fel'
    | '/inventory'
    | '/new-order'
    | '/orders'
    | '/products'
    | '/routes'
    | '/settings'
    | '/users'
    | '/clerk/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/clients/new-client'
    | '/edit-order/$orderId'
    | '/inventory-detail/$entryId'
    | '/inventory/new-entry'
    | '/order-detail/$orderId'
    | '/errors/$error'
    | '/fel/generate'
    | '/fel/invoices'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/apps'
    | '/chats'
    | '/companies/'
    | '/fel/'
    | '/help-center'
    | '/inventory/'
    | '/routes/'
    | '/tasks'
    | '/users/'
    | '/clients/edit-client/$clientId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/clients'
    | '/new-order'
    | '/orders'
    | '/products'
    | '/settings'
    | '/clerk'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/clients/new-client'
    | '/edit-order/$orderId'
    | '/inventory-detail/$entryId'
    | '/inventory/new-entry'
    | '/order-detail/$orderId'
    | '/errors/$error'
    | '/fel/generate'
    | '/fel/invoices'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/apps'
    | '/chats'
    | '/companies'
    | '/fel'
    | '/help-center'
    | '/inventory'
    | '/routes'
    | '/tasks'
    | '/users'
    | '/clients/edit-client/$clientId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/clerk'
    | '/_authenticated/clients'
    | '/_authenticated/companies'
    | '/_authenticated/fel'
    | '/_authenticated/inventory'
    | '/_authenticated/new-order'
    | '/_authenticated/orders'
    | '/_authenticated/products'
    | '/_authenticated/routes'
    | '/_authenticated/settings'
    | '/_authenticated/users'
    | '/clerk/(auth)'
    | '/clerk/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/clients/new-client'
    | '/_authenticated/edit-order/$orderId'
    | '/_authenticated/inventory-detail/$entryId'
    | '/_authenticated/inventory/new-entry'
    | '/_authenticated/order-detail/$orderId'
    | '/_authenticated/errors/$error'
    | '/_authenticated/fel/generate'
    | '/_authenticated/fel/invoices'
    | '/clerk/(auth)/sign-in'
    | '/clerk/(auth)/sign-up'
    | '/clerk/_authenticated/user-management'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/companies/'
    | '/_authenticated/fel/'
    | '/_authenticated/help-center/'
    | '/_authenticated/inventory/'
    | '/_authenticated/routes/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/clients/edit-client/$clientId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  ClerkRouteRoute: typeof ClerkRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/clerk': {
      id: '/clerk'
      path: '/clerk'
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clerk/_authenticated': {
      id: '/clerk/_authenticated'
      path: ''
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkAuthenticatedRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/clerk/(auth)': {
      id: '/clerk/(auth)'
      path: '/'
      fullPath: '/clerk/'
      preLoaderRoute: typeof ClerkauthRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/_authenticated/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/routes': {
      id: '/_authenticated/routes'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof AuthenticatedRoutesRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/products': {
      id: '/_authenticated/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/orders': {
      id: '/_authenticated/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthenticatedOrdersRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/new-order': {
      id: '/_authenticated/new-order'
      path: '/new-order'
      fullPath: '/new-order'
      preLoaderRoute: typeof AuthenticatedNewOrderRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/inventory': {
      id: '/_authenticated/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof AuthenticatedInventoryRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/fel': {
      id: '/_authenticated/fel'
      path: '/fel'
      fullPath: '/fel'
      preLoaderRoute: typeof AuthenticatedFelRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/companies': {
      id: '/_authenticated/companies'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof AuthenticatedCompaniesRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/clients': {
      id: '/_authenticated/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthenticatedClientsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedUsersIndexRouteImport
      parentRoute: typeof AuthenticatedUsersRouteRoute
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/routes/': {
      id: '/_authenticated/routes/'
      path: '/'
      fullPath: '/routes/'
      preLoaderRoute: typeof AuthenticatedRoutesIndexRouteImport
      parentRoute: typeof AuthenticatedRoutesRouteRoute
    }
    '/_authenticated/inventory/': {
      id: '/_authenticated/inventory/'
      path: '/'
      fullPath: '/inventory/'
      preLoaderRoute: typeof AuthenticatedInventoryIndexRouteImport
      parentRoute: typeof AuthenticatedInventoryRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/fel/': {
      id: '/_authenticated/fel/'
      path: '/'
      fullPath: '/fel/'
      preLoaderRoute: typeof AuthenticatedFelIndexRouteImport
      parentRoute: typeof AuthenticatedFelRouteRoute
    }
    '/_authenticated/companies/': {
      id: '/_authenticated/companies/'
      path: '/'
      fullPath: '/companies/'
      preLoaderRoute: typeof AuthenticatedCompaniesIndexRouteImport
      parentRoute: typeof AuthenticatedCompaniesRouteRoute
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/clerk/_authenticated/user-management': {
      id: '/clerk/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/clerk/user-management'
      preLoaderRoute: typeof ClerkAuthenticatedUserManagementRouteImport
      parentRoute: typeof ClerkAuthenticatedRouteRoute
    }
    '/clerk/(auth)/sign-up': {
      id: '/clerk/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/clerk/sign-up'
      preLoaderRoute: typeof ClerkauthSignUpRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/clerk/(auth)/sign-in': {
      id: '/clerk/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/clerk/sign-in'
      preLoaderRoute: typeof ClerkauthSignInRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/_authenticated/fel/invoices': {
      id: '/_authenticated/fel/invoices'
      path: '/invoices'
      fullPath: '/fel/invoices'
      preLoaderRoute: typeof AuthenticatedFelInvoicesRouteImport
      parentRoute: typeof AuthenticatedFelRouteRoute
    }
    '/_authenticated/fel/generate': {
      id: '/_authenticated/fel/generate'
      path: '/generate'
      fullPath: '/fel/generate'
      preLoaderRoute: typeof AuthenticatedFelGenerateRouteImport
      parentRoute: typeof AuthenticatedFelRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/order-detail/$orderId': {
      id: '/_authenticated/order-detail/$orderId'
      path: '/order-detail/$orderId'
      fullPath: '/order-detail/$orderId'
      preLoaderRoute: typeof AuthenticatedOrderDetailOrderIdRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/inventory/new-entry': {
      id: '/_authenticated/inventory/new-entry'
      path: '/new-entry'
      fullPath: '/inventory/new-entry'
      preLoaderRoute: typeof AuthenticatedInventoryNewEntryRouteRouteImport
      parentRoute: typeof AuthenticatedInventoryRouteRoute
    }
    '/_authenticated/inventory-detail/$entryId': {
      id: '/_authenticated/inventory-detail/$entryId'
      path: '/inventory-detail/$entryId'
      fullPath: '/inventory-detail/$entryId'
      preLoaderRoute: typeof AuthenticatedInventoryDetailEntryIdRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/edit-order/$orderId': {
      id: '/_authenticated/edit-order/$orderId'
      path: '/edit-order/$orderId'
      fullPath: '/edit-order/$orderId'
      preLoaderRoute: typeof AuthenticatedEditOrderOrderIdRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/clients/new-client': {
      id: '/_authenticated/clients/new-client'
      path: '/new-client'
      fullPath: '/clients/new-client'
      preLoaderRoute: typeof AuthenticatedClientsNewClientRouteRouteImport
      parentRoute: typeof AuthenticatedClientsRouteRoute
    }
    '/_authenticated/clients/edit-client/$clientId': {
      id: '/_authenticated/clients/edit-client/$clientId'
      path: '/edit-client/$clientId'
      fullPath: '/clients/edit-client/$clientId'
      preLoaderRoute: typeof AuthenticatedClientsEditClientClientIdRouteRouteImport
      parentRoute: typeof AuthenticatedClientsRouteRoute
    }
  }
}

interface AuthenticatedClientsRouteRouteChildren {
  AuthenticatedClientsNewClientRouteRoute: typeof AuthenticatedClientsNewClientRouteRoute
  AuthenticatedClientsEditClientClientIdRouteRoute: typeof AuthenticatedClientsEditClientClientIdRouteRoute
}

const AuthenticatedClientsRouteRouteChildren: AuthenticatedClientsRouteRouteChildren =
  {
    AuthenticatedClientsNewClientRouteRoute:
      AuthenticatedClientsNewClientRouteRoute,
    AuthenticatedClientsEditClientClientIdRouteRoute:
      AuthenticatedClientsEditClientClientIdRouteRoute,
  }

const AuthenticatedClientsRouteRouteWithChildren =
  AuthenticatedClientsRouteRoute._addFileChildren(
    AuthenticatedClientsRouteRouteChildren,
  )

interface AuthenticatedCompaniesRouteRouteChildren {
  AuthenticatedCompaniesIndexRoute: typeof AuthenticatedCompaniesIndexRoute
}

const AuthenticatedCompaniesRouteRouteChildren: AuthenticatedCompaniesRouteRouteChildren =
  {
    AuthenticatedCompaniesIndexRoute: AuthenticatedCompaniesIndexRoute,
  }

const AuthenticatedCompaniesRouteRouteWithChildren =
  AuthenticatedCompaniesRouteRoute._addFileChildren(
    AuthenticatedCompaniesRouteRouteChildren,
  )

interface AuthenticatedFelRouteRouteChildren {
  AuthenticatedFelGenerateRoute: typeof AuthenticatedFelGenerateRoute
  AuthenticatedFelInvoicesRoute: typeof AuthenticatedFelInvoicesRoute
  AuthenticatedFelIndexRoute: typeof AuthenticatedFelIndexRoute
}

const AuthenticatedFelRouteRouteChildren: AuthenticatedFelRouteRouteChildren = {
  AuthenticatedFelGenerateRoute: AuthenticatedFelGenerateRoute,
  AuthenticatedFelInvoicesRoute: AuthenticatedFelInvoicesRoute,
  AuthenticatedFelIndexRoute: AuthenticatedFelIndexRoute,
}

const AuthenticatedFelRouteRouteWithChildren =
  AuthenticatedFelRouteRoute._addFileChildren(
    AuthenticatedFelRouteRouteChildren,
  )

interface AuthenticatedInventoryRouteRouteChildren {
  AuthenticatedInventoryNewEntryRouteRoute: typeof AuthenticatedInventoryNewEntryRouteRoute
  AuthenticatedInventoryIndexRoute: typeof AuthenticatedInventoryIndexRoute
}

const AuthenticatedInventoryRouteRouteChildren: AuthenticatedInventoryRouteRouteChildren =
  {
    AuthenticatedInventoryNewEntryRouteRoute:
      AuthenticatedInventoryNewEntryRouteRoute,
    AuthenticatedInventoryIndexRoute: AuthenticatedInventoryIndexRoute,
  }

const AuthenticatedInventoryRouteRouteWithChildren =
  AuthenticatedInventoryRouteRoute._addFileChildren(
    AuthenticatedInventoryRouteRouteChildren,
  )

interface AuthenticatedRoutesRouteRouteChildren {
  AuthenticatedRoutesIndexRoute: typeof AuthenticatedRoutesIndexRoute
}

const AuthenticatedRoutesRouteRouteChildren: AuthenticatedRoutesRouteRouteChildren =
  {
    AuthenticatedRoutesIndexRoute: AuthenticatedRoutesIndexRoute,
  }

const AuthenticatedRoutesRouteRouteWithChildren =
  AuthenticatedRoutesRouteRoute._addFileChildren(
    AuthenticatedRoutesRouteRouteChildren,
  )

interface AuthenticatedUsersRouteRouteChildren {
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedUsersRouteRouteChildren: AuthenticatedUsersRouteRouteChildren =
  {
    AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  }

const AuthenticatedUsersRouteRouteWithChildren =
  AuthenticatedUsersRouteRoute._addFileChildren(
    AuthenticatedUsersRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedClientsRouteRoute: typeof AuthenticatedClientsRouteRouteWithChildren
  AuthenticatedCompaniesRouteRoute: typeof AuthenticatedCompaniesRouteRouteWithChildren
  AuthenticatedFelRouteRoute: typeof AuthenticatedFelRouteRouteWithChildren
  AuthenticatedInventoryRouteRoute: typeof AuthenticatedInventoryRouteRouteWithChildren
  AuthenticatedNewOrderRouteRoute: typeof AuthenticatedNewOrderRouteRoute
  AuthenticatedOrdersRouteRoute: typeof AuthenticatedOrdersRouteRoute
  AuthenticatedProductsRouteRoute: typeof AuthenticatedProductsRouteRoute
  AuthenticatedRoutesRouteRoute: typeof AuthenticatedRoutesRouteRouteWithChildren
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRoute
  AuthenticatedUsersRouteRoute: typeof AuthenticatedUsersRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedEditOrderOrderIdRouteRoute: typeof AuthenticatedEditOrderOrderIdRouteRoute
  AuthenticatedInventoryDetailEntryIdRouteRoute: typeof AuthenticatedInventoryDetailEntryIdRouteRoute
  AuthenticatedOrderDetailOrderIdRouteRoute: typeof AuthenticatedOrderDetailOrderIdRouteRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedClientsRouteRoute: AuthenticatedClientsRouteRouteWithChildren,
  AuthenticatedCompaniesRouteRoute:
    AuthenticatedCompaniesRouteRouteWithChildren,
  AuthenticatedFelRouteRoute: AuthenticatedFelRouteRouteWithChildren,
  AuthenticatedInventoryRouteRoute:
    AuthenticatedInventoryRouteRouteWithChildren,
  AuthenticatedNewOrderRouteRoute: AuthenticatedNewOrderRouteRoute,
  AuthenticatedOrdersRouteRoute: AuthenticatedOrdersRouteRoute,
  AuthenticatedProductsRouteRoute: AuthenticatedProductsRouteRoute,
  AuthenticatedRoutesRouteRoute: AuthenticatedRoutesRouteRouteWithChildren,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRoute,
  AuthenticatedUsersRouteRoute: AuthenticatedUsersRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedEditOrderOrderIdRouteRoute:
    AuthenticatedEditOrderOrderIdRouteRoute,
  AuthenticatedInventoryDetailEntryIdRouteRoute:
    AuthenticatedInventoryDetailEntryIdRouteRoute,
  AuthenticatedOrderDetailOrderIdRouteRoute:
    AuthenticatedOrderDetailOrderIdRouteRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface ClerkauthRouteRouteChildren {
  ClerkauthSignInRoute: typeof ClerkauthSignInRoute
  ClerkauthSignUpRoute: typeof ClerkauthSignUpRoute
}

const ClerkauthRouteRouteChildren: ClerkauthRouteRouteChildren = {
  ClerkauthSignInRoute: ClerkauthSignInRoute,
  ClerkauthSignUpRoute: ClerkauthSignUpRoute,
}

const ClerkauthRouteRouteWithChildren = ClerkauthRouteRoute._addFileChildren(
  ClerkauthRouteRouteChildren,
)

interface ClerkAuthenticatedRouteRouteChildren {
  ClerkAuthenticatedUserManagementRoute: typeof ClerkAuthenticatedUserManagementRoute
}

const ClerkAuthenticatedRouteRouteChildren: ClerkAuthenticatedRouteRouteChildren =
  {
    ClerkAuthenticatedUserManagementRoute:
      ClerkAuthenticatedUserManagementRoute,
  }

const ClerkAuthenticatedRouteRouteWithChildren =
  ClerkAuthenticatedRouteRoute._addFileChildren(
    ClerkAuthenticatedRouteRouteChildren,
  )

interface ClerkRouteRouteChildren {
  ClerkauthRouteRoute: typeof ClerkauthRouteRouteWithChildren
  ClerkAuthenticatedRouteRoute: typeof ClerkAuthenticatedRouteRouteWithChildren
}

const ClerkRouteRouteChildren: ClerkRouteRouteChildren = {
  ClerkauthRouteRoute: ClerkauthRouteRouteWithChildren,
  ClerkAuthenticatedRouteRoute: ClerkAuthenticatedRouteRouteWithChildren,
}

const ClerkRouteRouteWithChildren = ClerkRouteRoute._addFileChildren(
  ClerkRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  ClerkRouteRoute: ClerkRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
